"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;
var _config = await jitiImport("nuxt/config");
var _variables = _interopRequireDefault(await jitiImport("./config/variables.json"));
var _seo = _interopRequireDefault(await jitiImport("./config/seo.json"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };} // https://nuxtjs.org/docs/directory-structure/nuxt-config
var _default = exports.default =
(0, _config.defineNuxtConfig)({
  site: {
    url: _seo.default.site,
    name: _seo.default.title,
    description: _seo.default.description,
    defaultLocale: _seo.default.lang
  },

  app: {
    pageTransition: { name: 'page', mode: 'out-in' },
    head: {
      title: _seo.default.title,
      charset: 'utf-8',
      viewport: 'width=device-width, initial-scale=1',
      meta: [
      { name: 'description', content: _seo.default.description },
      { name: 'author', content: _seo.default.title },

      { property: 'og:type', content: 'website' },

      { name: 'msapplication-TileColor', content: _variables.default.color.primary },
      { name: 'theme-color', content: _variables.default.color.primary }],

      link: [
      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' },
      { rel: 'apple-touch-icon', sizes: '180x180', href: '/apple-touch-icon-180x180.png' },
      { rel: 'manifest', href: '/manifest.webmanifest' }]

    }
  },

  experimental: {
    typedPages: true
  },

  ogImage: {
    enabled: false
  },

  // dir: {
  //   app: 'src',
  // },

  // server side rendering mode
  ssr: true,

  typescript: {
    strict: false,
    typeCheck: true
  },

  build: {
    transpile: ['gsap']
  },

  // css
  css: ['~/assets/styles/app.scss'],

  // modules
  modules: [
  '@nuxt/devtools',
  '@nuxt/image',
  '@nuxtjs/device',
  '@vueuse/nuxt',
  'nuxt-purgecss',
  '@nuxt/eslint',
  '@nuxtjs/stylelint-module',
  '@nuxtjs/critters',
  '@nuxtjs/seo',
  'nuxt-svgo',
  'nuxt-mcp',
  'nuxt-tradingview',
  '@nuxt/scripts'],


  robots: {
    sitemap: '/sitemap.xml'
  },

  nitro: {
    prerender: {
      routes: ['/']
    }
  },

  image: {
    quality: 95,
    format: ['webp'],
    screens: {
      xs: 320,
      sm: 640,
      md: 768,
      lg: 1200,
      xl: 1400,
      xxl: 1800,
      '2xl': 2000
    }
  },

  tradingview: {
    importOnly: ['SymbolInfo', 'TickerTape']
  },

  svgo: {
    autoImportPath: '~/assets/icon',
    defaultImport: 'component',
    componentPrefix: 'Icon'
  },

  imports: {
    dirs: ['stores/**', 'composables/**', 'utils/**'],
    global: true
  },

  postcss: {
    plugins: {
      autoprefixer: {},
      cssnano: {
        preset: ['cssnano-preset-default', { discardComments: true }]
      },
      'postcss-preset-env': {
        features: {
          'custom-properties': false
        }
      },
      'postcss-calc': {
        mediaQueries: true
      }
    }
  },

  purgecss: {
    content: [
    'components/**/*.{vue,jsx?,tsx?}',
    'layouts/**/*.{vue,jsx?,tsx?}',
    'pages/**/*.{vue,jsx?,tsx?}',
    'composables/**/*.{vue,jsx?,tsx?}',
    'slices/**/*.{vue,jsx?,tsx?}',
    'App.{vue,jsx?,tsx?}',
    'app.{vue,jsx?,tsx?}',
    'plugins/**/*.{js,ts}',
    'nuxt.config.{js,ts}',
    '~/purgesafelist.txt'],

    // variables: true, // delete unused CSS variables
    fontFace: false, // delete unused font-faces
    defaultExtractor(content) {
      const contentWithoutStyleBlocks = content.replace(/<style[^]+?<\/style>/gi, '');
      return contentWithoutStyleBlocks.match(/[A-Za-z0-9-_/:]*[A-Za-z0-9-_/]+/g) || [];
    },
    safelist: [
    /-(leave|enter|appear)(|-(to|from|active))$/,
    /^(?!(|.*?:)cursor-move).+-move$/,
    /^router-link(|-exact)-active$/,
    /data-v-.*/,
    /swiper/]

  },

  // features: {
  //   // inlineStyles: false, // temp fix for dupplicate css inline <style> # https://github.com/nuxt/nuxt/issues/21821
  //   inlineStyles: (id) => !!id && id.includes('.vue'), // fixed by default in nuxt 4 https://github.com/nuxt/nuxt/issues/21821#event-15731571258
  // },

  runtimeConfig: {
    public: {
      scripts: {
        googleAnalytics: {
          // .env
          // NUXT_PUBLIC_SCRIPTS_GOOGLE_ANALYTICS_ID=<your-id>
          id: ''
        }
      }
    }
  },

  vite: {
    server: {
      allowedHosts: ['mosquito-fond-jointly.ngrok-free.app', '.trycloudflare.com']
    },
    css: {
      preprocessorMaxWorkers: true,
      preprocessorOptions: {
        scss: {
          additionalData: `
            @use "~/assets/styles/helpers/_variables.scss" as *;
            @use "~/assets/styles/helpers/_functions.scss" as fn;
            @use "~/assets/styles/helpers/_mixins.scss" as mx;
            @use "~/assets/styles/helpers/_typography.scss" as mxt;
          `
        }
      }
    }
  },

  devtools: {
    enabled: true,

    timeline: {
      enabled: true
    }
  },

  compatibilityDate: '2025-07-16'
}); /* v9-eacfc5f5262ab780 */
