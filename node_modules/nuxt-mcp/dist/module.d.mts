import * as _nuxt_schema from '@nuxt/schema';
import { Nuxt } from '@nuxt/schema';
import { McpServer, ViteMcpOptions } from 'vite-plugin-mcp';
import { Nitro } from 'nitropack';
import { Unimport } from 'unimport';
import { ViteDevServer } from 'vite';

interface McpToolContext {
    nuxt: Nuxt;
    mcp: McpServer;
    vite: ViteDevServer;
    nitro: Promise<Nitro>;
    unimport: Promise<Unimport>;
}

interface ModuleOptions extends ViteMcpOptions {
    /**
     * Includes the online Nuxt MCP server from https://mcp.nuxt.com/sse
     *
     * This MCP would provide information about the Nuxt ecosystem, including
     * the latest documentation, available modules, etc.
     *
     * @default true
     */
    includeNuxtDocsMcp?: boolean;
}
interface ModuleHooks {
    'mcp:setup': (context: McpToolContext) => void;
}
declare const _default: _nuxt_schema.NuxtModule<ModuleOptions, ModuleOptions, false>;

declare module 'nuxt/schema' {
    interface NuxtHooks {
        'mcp:setup': (ctx: McpToolContext) => void | Promise<void>;
    }
}
declare module '@nuxt/schema' {
    interface NuxtHooks {
        'mcp:setup': (ctx: McpToolContext) => void | Promise<void>;
    }
}

export { _default as default };
export type { ModuleHooks, ModuleOptions };
